#################################
#             Shadows           #
#################################

# Enabled client-side shadows on windows (defaults to false).
shadow = true;

# The blur radius for shadows, in pixels. (defaults to 12)
shadow-radius = 12;

# The opacity of shadows. (0.0 - 1.0, defaults to 0.75)
shadow-opacity = 0.90;

# The left offset for shadows, in pixels. (defaults to -15)
shadow-offset-x = -12;

# The top offset for shadows, in pixels. (defaults to -15)
shadow-offset-y = -12;

# Red color value of shadow (0.0 - 1.0, defaults to 0).
shadow-red = 0.09;

# Green color value of shadow (0.0 - 1.0, defaults to 0).
shadow-green = 0.58;

# Blue color value of shadow (0.0 - 1.0, defaults to 0).
shadow-blue = 0.82;

# Specify array of conditions of windows that should have no shadow.
shadow-exclude = [
  "!focused",
  "name = 'Notification'",
  "class_g = 'Conky'",
  "class_g ?= 'Notify-osd'",
  "class_g = 'Cairo-clock'",
  "_GTK_FRAME_EXTENTS@:c"
];


#################################
#           Fading              #
#################################

# Fade windows in/out when opening/closing and when opacity changes,
fading = true;

# Opacity change between steps while fading in. (0.01 - 1.0)
fade-in-step = 0.03;

# Opacity change between steps while fading out. (0.01 - 1.0)
fade-out-step = 0.03;

# Time between steps in fade, in milliseconds. (> 0, defaults to 10)
fade-delta = 5;

# Specify a list of conditions of windows that should not be faded.
# fade-exclude = []

# Do not fade on window open/close.
no-fading-openclose = false;

# Do not fade destroyed ARGB windows with WM frame. Workaround of bugs in Openbox, Fluxbox, etc.
no-fading-destroyed-argb = false;


#################################
#   Transparency / Opacity      #
#################################

# Opacity of inactive windows. (0.1 - 1.0, defaults to 1.0)
inactive-opacity = 1.0

# Opacity for dropdown menus and popups. (0.0 - 1.0, defaults to 1.0)
menu-opacity = 1.0

# Let inactive opacity set by -i override '_NET_WM_OPACITY'.
inactive-opacity-override = false

# Default opacity for active windows. (0.0 - 1.0, defaults to 1.0)
active-opacity = 1.0

# Dim inactive windows. (0.0 - 1.0, defaults to 0.0)
inactive-dim = 0.0

# List of windows that should always be considered focused.
# focus-exclude = [ "class_g = 'Cairo-clock'" ];

# Use fixed inactive dim value instead of adjusting to window opacity.
inactive-dim-fixed = 1.0

# Specify a list of opacity rules, in the format `PERCENT:PATTERN`, 
opacity-rule = [
	"60:class_g = 'Alacritty' && !focused",
	"80:class_g = 'Alacritty' && focused",
	"100:class_g = 'i3lock'"
];


#################################
#     Background-Blurring       #
#################################

# Blur background of semi-transparent / ARGB windows. 
# Bad in performance, with driver-dependent behavior. 
# The name of the switch may change without prior notifications.
#
# blur-background = true

# Use fixed blur strength, don't adjust according to window opacity.
# blur-background-fixed = false

# Specify the blur convolution kernel
blur: {
	method = "gaussian";
	size = 5; 
	deviation = 10;
};

# Exclude conditions for background blur.
blur-background-exclude = [
  "!focused",
  "window_type = 'dock'",
  "window_type = 'desktop'",
  "_GTK_FRAME_EXTENTS@:c"
];


#################################
#       General Settings        #
#################################

# Specify the backend to use: `xrender`, `glx`, or `xr_glx_hybrid`.
backend = "glx";

# Enable/disable VSync.
vsync = true;

# Try to detect windows with rounded corners.
detect-rounded-corners = true;

# Specify refresh rate of the screen. If not specified or 0,
# picom will try detecting this with X RandR extension.
refresh-rate = 0;

# Use EWMH '_NET_ACTIVE_WINDOW' to determine currently focused window 
use-ewmh-active-win = true;

# Set the log level. Possible values are:
# "trace", "debug", "info", "warn", "error"
# in increasing level of importance. Case doesn't matter. 
# If using the "TRACE" log level, it's better to log into a file 
# using *--log-file*, since it can generate a huge stream of logs.
log-level = "error";

# Set the log file.
# If *--log-file* is never specified, logs will be written to stderr. 
# Otherwise, logs will to written to the given file,
# though some of the early 
# logs might still be written to the stderr. 
# When setting this option from the config file,
# it is recommended to use an absolute path.
log-file = "/home/wayner/.config/picom/log/picom.log";

# Window type settings
# 
# 'WINDOW_TYPE' is one of the 15 window types defined in EWMH standard: 
#     "unknown", "desktop", "dock", "toolbar", "menu", "utility", 
#     "splash", "dialog", "normal", "dropdown_menu", "popup_menu", 
#     "tooltip", "notification", "combo", and "dnd".
# 
# Following per window-type options are available: ::
# 
#   fade, shadow:::
#     Controls window-type-specific shadow and fade settings.
# 
#   opacity:::
#     Controls default opacity of the window type.
# 
#   focus:::
#     Controls whether this type is to be always considered focused. 
# 
#   full-shadow:::
#     Controls whether shadow is drawn under the parts of the window
# 	  that you normally won't be able to see.
# 
#   redir-ignore:::
#     Controls whether this type of windows should cause screen
#     to become redirected again after been unredirected.
#     If you have unredir-if-possible set, and doesn't want certain
#     window to cause unnecessary screen redirection,
#     you can set this to `true`.
wintypes:
{
	tooltip = {
		fade = true; 
		shadow = true; 
		opacity = 1.0; 
		focus = true; 
		full-shadow = false; 
		};
	dock = { 
		shadow = false; 
		}
	dnd = { 
		shadow = false; 
		}
	popup_menu = { 
		opacity = 1.0; 
		}
	dropdown_menu = { 
		opacity = 1.0; 
		}
};
